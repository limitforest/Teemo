package com.ciotc.teemo.domain;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ShortcomntsExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table shortcomnts
	 * @ibatorgenerated  Mon Apr 16 15:06:52 CST 2012
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table shortcomnts
	 * @ibatorgenerated  Mon Apr 16 15:06:52 CST 2012
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table shortcomnts
	 * @ibatorgenerated  Mon Apr 16 15:06:52 CST 2012
	 */
	public ShortcomntsExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table shortcomnts
	 * @ibatorgenerated  Mon Apr 16 15:06:52 CST 2012
	 */
	protected ShortcomntsExample(ShortcomntsExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table shortcomnts
	 * @ibatorgenerated  Mon Apr 16 15:06:52 CST 2012
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table shortcomnts
	 * @ibatorgenerated  Mon Apr 16 15:06:52 CST 2012
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table shortcomnts
	 * @ibatorgenerated  Mon Apr 16 15:06:52 CST 2012
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table shortcomnts
	 * @ibatorgenerated  Mon Apr 16 15:06:52 CST 2012
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table shortcomnts
	 * @ibatorgenerated  Mon Apr 16 15:06:52 CST 2012
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table shortcomnts
	 * @ibatorgenerated  Mon Apr 16 15:06:52 CST 2012
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table shortcomnts
	 * @ibatorgenerated  Mon Apr 16 15:06:52 CST 2012
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table shortcomnts
	 * @ibatorgenerated  Mon Apr 16 15:06:52 CST 2012
	 */
	public static class Criteria {
	protected List criteriaWithoutValue;
	protected List criteriaWithSingleValue;
	protected List criteriaWithListValue;
	protected List criteriaWithBetweenValue;
	
	protected Criteria() {
		super();
		criteriaWithoutValue = new ArrayList();
		criteriaWithSingleValue = new ArrayList();
		criteriaWithListValue = new ArrayList();
		criteriaWithBetweenValue = new ArrayList();
	}
	
	public boolean isValid() {
		return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
				|| criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
	}
	
	public List getCriteriaWithoutValue() {
		return criteriaWithoutValue;
	}
	
	public List getCriteriaWithSingleValue() {
		return criteriaWithSingleValue;
	}
	
	public List getCriteriaWithListValue() {
		return criteriaWithListValue;
	}
	
	public List getCriteriaWithBetweenValue() {
		return criteriaWithBetweenValue;
	}
	
	protected void addCriterion(String condition) {
		if (condition == null) {
			throw new RuntimeException("Value for condition cannot be null");
		}
		criteriaWithoutValue.add(condition);
	}
	
	protected void addCriterion(String condition, Object value, String property) {
		if (value == null) {
			throw new RuntimeException("Value for " + property + " cannot be null");
		}
		Map map = new HashMap();
		map.put("condition", condition);
		map.put("value", value);
		criteriaWithSingleValue.add(map);
	}
	
	protected void addCriterion(String condition, List values, String property) {
		if (values == null || values.size() == 0) {
			throw new RuntimeException("Value list for " + property + " cannot be null or empty");
		}
		Map map = new HashMap();
		map.put("condition", condition);
		map.put("values", values);
		criteriaWithListValue.add(map);
	}
	
	protected void addCriterion(String condition, Object value1, Object value2, String property) {
		if (value1 == null || value2 == null) {
			throw new RuntimeException("Between values for " + property + " cannot be null");
		}
		List list = new ArrayList();
		list.add(value1);
		list.add(value2);
		Map map = new HashMap();
		map.put("condition", condition);
		map.put("values", list);
		criteriaWithBetweenValue.add(map);
	}
	
	public Criteria andIdIsNull() {
		addCriterion("id is null");
		return this;
	}
	
	public Criteria andIdIsNotNull() {
		addCriterion("id is not null");
		return this;
	}
	
	public Criteria andIdEqualTo(String value) {
		addCriterion("id =", value, "id");
		return this;
	}
	
	public Criteria andIdNotEqualTo(String value) {
		addCriterion("id <>", value, "id");
		return this;
	}
	
	public Criteria andIdGreaterThan(String value) {
		addCriterion("id >", value, "id");
		return this;
	}
	
	public Criteria andIdGreaterThanOrEqualTo(String value) {
		addCriterion("id >=", value, "id");
		return this;
	}
	
	public Criteria andIdLessThan(String value) {
		addCriterion("id <", value, "id");
		return this;
	}
	
	public Criteria andIdLessThanOrEqualTo(String value) {
		addCriterion("id <=", value, "id");
		return this;
	}
	
	public Criteria andIdLike(String value) {
		addCriterion("id like", value, "id");
		return this;
	}
	
	public Criteria andIdNotLike(String value) {
		addCriterion("id not like", value, "id");
		return this;
	}
	
	public Criteria andIdIn(List values) {
		addCriterion("id in", values, "id");
		return this;
	}
	
	public Criteria andIdNotIn(List values) {
		addCriterion("id not in", values, "id");
		return this;
	}
	
	public Criteria andIdBetween(String value1, String value2) {
		addCriterion("id between", value1, value2, "id");
		return this;
	}
	
	public Criteria andIdNotBetween(String value1, String value2) {
		addCriterion("id not between", value1, value2, "id");
		return this;
	}
	
	public Criteria andRecordsIsNull() {
		addCriterion("records is null");
		return this;
	}
	
	public Criteria andRecordsIsNotNull() {
		addCriterion("records is not null");
		return this;
	}
	
	public Criteria andRecordsEqualTo(String value) {
		addCriterion("records =", value, "records");
		return this;
	}
	
	public Criteria andRecordsNotEqualTo(String value) {
		addCriterion("records <>", value, "records");
		return this;
	}
	
	public Criteria andRecordsGreaterThan(String value) {
		addCriterion("records >", value, "records");
		return this;
	}
	
	public Criteria andRecordsGreaterThanOrEqualTo(String value) {
		addCriterion("records >=", value, "records");
		return this;
	}
	
	public Criteria andRecordsLessThan(String value) {
		addCriterion("records <", value, "records");
		return this;
	}
	
	public Criteria andRecordsLessThanOrEqualTo(String value) {
		addCriterion("records <=", value, "records");
		return this;
	}
	
	public Criteria andRecordsLike(String value) {
		addCriterion("records like", value, "records");
		return this;
	}
	
	public Criteria andRecordsNotLike(String value) {
		addCriterion("records not like", value, "records");
		return this;
	}
	
	public Criteria andRecordsIn(List values) {
		addCriterion("records in", values, "records");
		return this;
	}
	
	public Criteria andRecordsNotIn(List values) {
		addCriterion("records not in", values, "records");
		return this;
	}
	
	public Criteria andRecordsBetween(String value1, String value2) {
		addCriterion("records between", value1, value2, "records");
		return this;
	}
	
	public Criteria andRecordsNotBetween(String value1, String value2) {
		addCriterion("records not between", value1, value2, "records");
		return this;
	}
	}
}