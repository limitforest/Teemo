package com.ciotc.teemo.dao;

import com.ciotc.teemo.domain.Movies;
import com.ciotc.teemo.domain.MoviesExample;
import com.ibatis.sqlmap.client.SqlMapClient;
import java.sql.SQLException;
import java.util.List;

public class MoviesDAOImpl implements MoviesDAO {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table movies
	 * @ibatorgenerated  Mon Apr 16 15:06:52 CST 2012
	 */
	private SqlMapClient sqlMapClient;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table movies
	 * @ibatorgenerated  Mon Apr 16 15:06:52 CST 2012
	 */
	public MoviesDAOImpl(SqlMapClient sqlMapClient) {
		super();
		this.sqlMapClient = sqlMapClient;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table movies
	 * @ibatorgenerated  Mon Apr 16 15:06:52 CST 2012
	 */
	public int countByExample(MoviesExample example) throws SQLException {
		Integer count = (Integer) sqlMapClient.queryForObject(
				"movies.ibatorgenerated_countByExample", example);
		return count.intValue();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table movies
	 * @ibatorgenerated  Mon Apr 16 15:06:52 CST 2012
	 */
	public int deleteByExample(MoviesExample example) throws SQLException {
		int rows = sqlMapClient.delete("movies.ibatorgenerated_deleteByExample", example);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table movies
	 * @ibatorgenerated  Mon Apr 16 15:06:52 CST 2012
	 */
	public int deleteByPrimaryKey(String id) throws SQLException {
		Movies key = new Movies();
		key.setId(id);
		int rows = sqlMapClient.delete("movies.ibatorgenerated_deleteByPrimaryKey", key);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table movies
	 * @ibatorgenerated  Mon Apr 16 15:06:52 CST 2012
	 */
	public void insert(Movies record) throws SQLException {
		sqlMapClient.insert("movies.ibatorgenerated_insert", record);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table movies
	 * @ibatorgenerated  Mon Apr 16 15:06:52 CST 2012
	 */
	public void insertSelective(Movies record) throws SQLException {
		sqlMapClient.insert("movies.ibatorgenerated_insertSelective", record);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table movies
	 * @ibatorgenerated  Mon Apr 16 15:06:52 CST 2012
	 */
	public List selectByExample(MoviesExample example) throws SQLException {
		List list = sqlMapClient.queryForList("movies.ibatorgenerated_selectByExample", example);
		return list;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table movies
	 * @ibatorgenerated  Mon Apr 16 15:06:52 CST 2012
	 */
	public Movies selectByPrimaryKey(String id) throws SQLException {
		Movies key = new Movies();
		key.setId(id);
		Movies record = (Movies) sqlMapClient.queryForObject(
				"movies.ibatorgenerated_selectByPrimaryKey", key);
		return record;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table movies
	 * @ibatorgenerated  Mon Apr 16 15:06:52 CST 2012
	 */
	public int updateByExampleSelective(Movies record, MoviesExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update("movies.ibatorgenerated_updateByExampleSelective", parms);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table movies
	 * @ibatorgenerated  Mon Apr 16 15:06:52 CST 2012
	 */
	public int updateByExample(Movies record, MoviesExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update("movies.ibatorgenerated_updateByExample", parms);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table movies
	 * @ibatorgenerated  Mon Apr 16 15:06:52 CST 2012
	 */
	public int updateByPrimaryKeySelective(Movies record) throws SQLException {
		int rows = sqlMapClient
				.update("movies.ibatorgenerated_updateByPrimaryKeySelective", record);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table movies
	 * @ibatorgenerated  Mon Apr 16 15:06:52 CST 2012
	 */
	public int updateByPrimaryKey(Movies record) throws SQLException {
		int rows = sqlMapClient.update("movies.ibatorgenerated_updateByPrimaryKey", record);
		return rows;
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table movies
	 * @ibatorgenerated  Mon Apr 16 15:06:52 CST 2012
	 */
	private static class UpdateByExampleParms extends MoviesExample {
	private Object record;
	
	public UpdateByExampleParms(Object record, MoviesExample example) {
		super(example);
		this.record = record;
	}
	
	public Object getRecord() {
		return record;
	}
	}
}